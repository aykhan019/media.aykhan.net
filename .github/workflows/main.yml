name: directory-listing
on:
  push:
    branches:
      - master  # Adjust if your default branch is named differently

jobs:
  generate-directory-listings:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: master  # Adjust if necessary

      # Find all directories except .git and node_modules
      - name: List all directories
        id: list-dirs
        run: |
          dirs=$(find . -type d -not -path './.git*' -not -path './node_modules*')
          echo "Directories found:"
          echo "$dirs"
          # Save the directories into a multi-line output
          echo "::set-output name=dirs::$dirs"

  generate-directory-listing-for-each-dir:
    needs: generate-directory-listings
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: ${{ fromJson(needs.generate-directory-listings.outputs.dirs) }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: master  # Adjust if necessary

      # Generate Directory Listings for each directory
      - name: Generate Directory Listing
        uses: jayanta525/github-pages-directory-listing@v4.0.0
        with:
          FOLDER: ${{ matrix.dir }}

      # Prepare cleaned paths for artifact upload
      - name: Prepare directory paths for upload
        id: prepare-paths
        run: |
          cleaned_dir=$(echo "${{ matrix.dir }}" | sed 's/^\.\///g')  # Remove leading './'
          echo "Cleaned directory: $cleaned_dir"
          echo "::set-output name=cleaned_dir::$cleaned_dir"

      # Upload the directories as artifacts
      - name: Upload artifacts
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ steps.prepare-paths.outputs.cleaned_dir }}

  deploy:
    needs: generate-directory-listing-for-each-dir
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
